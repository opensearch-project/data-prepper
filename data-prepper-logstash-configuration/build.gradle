/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'antlr'
    id 'idea'
    id 'data-prepper.publish'
}

group = 'org.opensearch.dataprepper.core'

ext {
    antlrGeneratedPackageDirectory = "org/opensearch/dataprepper/logstash/"
}

dependencies {
    antlr('org.antlr:antlr4:4.10.1') {
        exclude group: 'org.glassfish', module: 'javax.json'
    }
    implementation project(':data-prepper-api')
    implementation project(':data-prepper-plugins:date-processor')
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation libs.commons.lang3
    testImplementation testLibs.slf4j.simple
}

generateGrammarSource {
    maxHeapSize = '128m'
    arguments += ['-listener', '-visitor']
    outputDirectory = new File("build/generated-src/antlr/main/${antlrGeneratedPackageDirectory}")
}

compileJava.dependsOn generateGrammarSource

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule { //in addition to core projects rule - this one checks for 100% code coverage for this project
            limit {
                minimum = 1.0 //keep this at 100%
            }
        }
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ["${antlrGeneratedPackageDirectory}/**"])
        }))
    }
}

tasks.named('sourcesJar').configure {
    dependsOn 'generateGrammarSource'
}

