/*
 * Copyright OpenSearch Contributors
 * SPDX-License-Identifier: Apache-2.0
 */

plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    implementation project(':data-prepper-api')
    implementation project(':data-prepper-plugins:common')
    implementation project(':data-prepper-plugins:buffer-common')
    implementation project(':data-prepper-plugins:blocking-buffer')
    implementation project(':data-prepper-plugins:aws-plugin-api')
    // bump io.confluent:* dependencies correspondingly when bumping org.apache.kafka.*
    // https://docs.confluent.io/platform/current/release-notes/index.html
    implementation 'org.apache.kafka:kafka-clients:3.6.1'
    implementation 'org.apache.kafka:connect-json:3.6.1'
    implementation project(':data-prepper-plugins:http-common')
    implementation libs.avro.core
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'io.micrometer:micrometer-core'
    implementation libs.commons.lang3
    implementation 'io.confluent:kafka-avro-serializer:7.6.0'
    implementation 'io.confluent:kafka-json-schema-serializer:7.6.0'
    implementation 'io.confluent:kafka-schema-registry-client:7.6.0'
    implementation 'software.amazon.awssdk:sts'
    implementation 'software.amazon.awssdk:auth'
    implementation 'software.amazon.awssdk:kafka'
    implementation 'software.amazon.awssdk:kms'
    implementation 'software.amazon.msk:aws-msk-iam-auth:2.0.3'
    implementation 'software.amazon.glue:schema-registry-serde:1.1.18'
    implementation project(':data-prepper-plugins:failures-common')
    implementation 'com.github.java-json-tools:json-schema-validator:2.2.14'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:apache-client'

    testImplementation 'org.yaml:snakeyaml:2.2'
    testImplementation testLibs.spring.test
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    testImplementation project(':data-prepper-test-common')
    testImplementation project(':data-prepper-plugins:blocking-buffer')
    testImplementation project(':data-prepper-core')
    testImplementation project(':data-prepper-plugin-framework')
    testImplementation project(':data-prepper-pipeline-parser')
    testImplementation 'org.apache.kafka:kafka_2.13:3.6.1'
    testImplementation 'org.apache.kafka:kafka_2.13:3.6.1:test'
    testImplementation 'org.apache.curator:curator-test:5.5.0'
    testImplementation('com.kjetland:mbknor-jackson-jsonschema_2.13:1.0.39')
    testImplementation project(':data-prepper-plugins:otel-metrics-source')
    testImplementation project(':data-prepper-plugins:otel-proto-common')
    testImplementation libs.opentelemetry.proto
    testImplementation libs.protobuf.util
    testImplementation libs.commons.io
    testImplementation libs.armeria.grpc
    testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    integrationTestImplementation testLibs.junit.vintage
    integrationTestImplementation 'io.confluent:kafka-schema-registry:7.6.0'
    integrationTestImplementation ('io.confluent:kafka-schema-registry:7.6.0:tests') {
        exclude group: 'org.glassfish.jersey.containers', module: 'jersey-container-servlet'
        exclude group: 'org.glassfish.jersey.inject', module: 'jersey-hk2'
        exclude group: 'org.glassfish.jersey.ext', module: 'jersey-bean-validation'
    }

    constraints {
        implementation('org.mozilla:rhino') {
            version {
                require '1.7.12'
            }
            because 'Fixes SNYK-JAVA-ORGMOZILLA-1314295.'
        }
        implementation('org.bitbucket.b_c:jose4j') {
            version {
                require '0.9.4'
            }
            because 'Fixes CVE-2023-51775 and other CVEs from transitive dependencies'
        }
    }
}


protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.0'
    }
}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs

    useJUnitPlatform()

    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperty 'tests.kafka.bootstrap_servers', System.getProperty('tests.kafka.bootstrap_servers')
    systemProperty 'tests.kafka.topic_name', System.getProperty('tests.kafka.topic_name')
    systemProperty 'tests.kafka.json_topic_name', System.getProperty('tests.kafka.json_topic_name')
    systemProperty 'tests.kafka.avro_topic_name', System.getProperty('tests.kafka.avro_topic_name')
    systemProperty 'tests.kafka.schema_registry_url', System.getProperty('tests.kafka.schema_registry_url')
    systemProperty 'tests.kafka.schema_registry_userinfo', System.getProperty('tests.kafka.schema_registry_userinfo')
    systemProperty 'tests.kafka.saslssl_bootstrap_servers', System.getProperty('tests.kafka.saslssl_bootstrap_servers')
    systemProperty 'tests.kafka.ssl_bootstrap_servers', System.getProperty('tests.kafka.ssl_bootstrap_servers')
    systemProperty 'tests.kafka.saslplain_bootstrap_servers', System.getProperty('tests.kafka.saslplain_bootstrap_servers')
    systemProperty 'tests.kafka.username', System.getProperty('tests.kafka.username')
    systemProperty 'tests.kafka.password', System.getProperty('tests.kafka.password')
    systemProperty 'tests.kafka.glue_registry_name', System.getProperty('tests.kafka.glue_registry_name')
    systemProperty 'tests.kafka.glue_json_schema_name', System.getProperty('tests.kafka.glue_json_schema_name')
    systemProperty 'tests.kafka.glue_avro_schema_name', System.getProperty('tests.kafka.glue_avro_schema_name')
    systemProperty 'tests.msk.region', System.getProperty('tests.msk.region')
    systemProperty 'tests.msk.arn', System.getProperty('tests.msk.arn')
    systemProperty 'tests.kafka.confluent.registry_url', System.getProperty('tests.kafka.confluent.registry_url')
    systemProperty 'tests.kafka.authconfig.username', System.getProperty('tests.kafka.authconfig.username')
    systemProperty 'tests.kafka.authconfig.password', System.getProperty('tests.kafka.authconfig.password')
    systemProperty 'tests.kafka.kms_key', System.getProperty('tests.kafka.kms_key')

    filter {
        includeTestsMatching '*IT'
    }
}
