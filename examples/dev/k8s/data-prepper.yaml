apiVersion: v1
data:
  data-prepper-wait-for-os-and-start.sh: |-
    #!/bin/bash

    until [[ $(curl --write-out %{http_code} --output /dev/null --silent --head --fail https://opensearch:9200 -u admin:admin --insecure) == 200 ]]; do
      echo "Waiting for OpenSearch to be ready"
      sleep 1
    done

    java -Xms128m -Xmx128m -jar /usr/share/data-prepper/data-prepper.jar /appconfig/trace_analytics_no_ssl.yml /appconfig/data-prepper-config.yml
  trace_analytics_no_ssl.yml: |
    entry-pipeline:
      delay: "100"
      source:
        otel_trace_source:
          ssl: false
      processor:
      sink:
        - pipeline:
            name: "raw-pipeline"
        - pipeline:
            name: "service-map-pipeline"
    raw-pipeline:
      source:
        pipeline:
          name: "entry-pipeline"
      processor:
        - otel_traces:
      sink:
        - opensearch:
            hosts: [ "https://opensearch:9200" ]
            insecure: true
            username: "admin"
            password: "admin"
            index_type: trace-analytics-raw
    service-map-pipeline:
      delay: "100"
      source:
        pipeline:
          name: "entry-pipeline"
      processor:
        - service_map:
      sink:
        - opensearch:
            hosts: ["https://opensearch:9200"]
            insecure: true
            username: "admin"
            password: "admin"
            index_type: trace-analytics-service-map
  data-prepper-config.yml: |
    ssl: false
    peer_forwarder:
      ssl: false
      discovery_mode: "dns"
      domain_name: "data-prepper-headless"
kind: ConfigMap
metadata:
  creationTimestamp: "2020-12-11T18:07:51Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:root-ca.pem: {}
    manager: kubectl-create
    operation: Update
    time: "2020-12-11T18:07:51Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        f:data-prepper-wait-for-os-and-start.sh: {}
        f:trace_analytics_no_ssl.yml: {}
    manager: dashboard
    operation: Update
    time: "2020-12-11T20:15:33Z"
  name: data-prepper-config
  namespace: default
  resourceVersion: "42689"
  selfLink: /api/v1/namespaces/default/configmaps/data-prepper-config
  uid: f15ec902-17fd-4e7c-be6f-8d1f60442b3a
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: data-prepper
  name: data-prepper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-prepper
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.network/my-network: "true"
        app: data-prepper
    spec:
      containers:
      - args:
        - sh
        - /appconfig/data-prepper-wait-for-os-and-start.sh
        image: example-k8s/data-prepper
        imagePullPolicy: "Never"
        name: data-prepper
        ports:
        - containerPort: 21890
        resources: {}
        volumeMounts:
        - mountPath: /appconfig
          name: prepper-configmap-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: prepper-configmap-claim0
        configMap:
          name: data-prepper-config
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: data-prepper
  name: data-prepper
spec:
  ports:
  - name: "21890"
    port: 21890
    targetPort: 21890
  selector:
    app: data-prepper
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: data-prepper
  name: data-prepper-headless
spec:
  clusterIP: None
  ports:
  - name: "21890"
    port: 21890
    targetPort: 21890
  selector:
    app: data-prepper
status:
  loadBalancer: {}
---
